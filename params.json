{"name":"Pymodbus3","tagline":"A full Modbus protocol written in Python 3.","body":"# Summary\r\n\r\nPymodbus is a full Modbus protocol implementation using twisted for its\r\nasynchronous communications core. It can also be used without any third\r\nparty dependencies (aside from pyserial) if a more lightweight project is\r\nneeded.\r\n\r\n\r\n# Features\r\n\r\n\r\n## Client Features\r\n\r\n  * Full read/write protocol on discrete and register\r\n  * Most of the extended protocol (diagnostic/file/pipe/setting/information)\r\n  * TCP, UDP, Serial ASCII, Serial RTU, and Serial Binary\r\n  * Asynchronous(powered by twisted) and synchronous versions\r\n  * Payload builder/decoder utilities\r\n\r\n\r\n## Server Features\r\n\r\n  * Can function as a fully implemented modbus server\r\n  * TCP, UDP, Serial ASCII, Serial RTU, and Serial Binary\r\n  * Asynchronous (powered by twisted) and synchronous versions\r\n  * Full server control context (device information, counters, etc)\r\n  * A number of backing contexts (database, redis, a slave device)\r\n\r\n\r\n# Use Cases\r\n\r\nAlthough most system administrators will find little need for a Modbus\r\nserver on any modern hardware, they may find the need to query devices on\r\ntheir network for status (PDU, PDR, UPS, etc).  Since the library is written\r\nin python, it allows for easy scripting and/or integration into their existing\r\nsolutions.\r\n\r\nContinuing, most monitoring software needs to be stress tested against\r\nhundreds or even thousands of devices (why this was originally written), but\r\ngetting access to that many is unwieldy at best. The pymodbus3 server will allow\r\na user to test as many devices as their base operating system will allow (*allow*\r\nin this case means how many Virtual IP addresses are allowed).\r\n\r\nFor more information please browse the\r\n[project documentation](http://readthedocs.org/docs/pymodbus3/en/latest/index.html).\r\n\r\n\r\n# Example Code\r\n\r\n\r\nFor those of you that just want to get started fast, here you go:\r\n\r\n    from pymodbus3.client.sync import ModbusTcpClient\r\n    \r\n    client = ModbusTcpClient('127.0.0.1')\r\n    client.write_coil(1, True)\r\n    result = client.read_coils(1,1)\r\n    print result.bits[0]\r\n    client.close()\r\n\r\nFor more advanced examples, check out the examples included in the\r\nrepository. If you have created any utilities that meet a specific\r\nneed, feel free to submit them so others can benefit.\r\n\r\nAlso, if you have questions, please ask them on the mailing list\r\nso that others can benefit from the results and so that I can\r\ntrace them. Also you can write to \r\n[issue tracker](https://github.com/uzumaxy/pymodbus3/issues).\r\n\r\n\r\n# Installing\r\n\r\nYou can install using pip or easy install by issuing the following\r\ncommands in a terminal window (make sure you have correct\r\npermissions or a virtualenv currently running):\r\n\r\n    easy_install -U pymodbus3\r\n    pip install -U pymodbus3\r\n\r\nOtherwise you can pull the trunk source and install from there:\r\n\r\n    git clone https://github.com/uzumaxy/pymodbus3.git\r\n    cd pymodbus3\r\n    python setup.py install\r\n\r\nEither method will install all the required dependencies\r\n(at their appropriate versions) for your current python distribution.\r\n\r\nIf you would like to install pymodbus3 without the twisted dependency,\r\nsimply edit the `setup.py` file before running easy_install and comment\r\nout all mentions of twisted.  It should be noted that without twisted,\r\none will only be able to run the synchronized version as the\r\nasynchronous versions uses twisted for its event loop.\r\n\r\n\r\n# Current Work In Progress\r\n\r\nListing of immediate tasks:\r\n\r\n  * Fixing bugs/feature requests\r\n  * Architecture documentation\r\n  * Functional testing against any reference I can find\r\n  * The remaining edges of the protocol (that I think no one uses)\r\n   \r\n\r\n# License Information\r\n\r\nPymodbus is built on top of code developed from/by:\r\n  * Copyright (c) 2001-2005 S.W.A.C. GmbH, Germany.\r\n  * Copyright (c) 2001-2005 S.W.A.C. Bohemia s.r.o., Czech Republic.\r\n  * Hynek Petrak <hynek@swac.cz>\r\n  * Twisted Matrix\r\n\r\nReleased under the BSD License\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}